def print_inventory(dct):
    i = 1
    print("Цитаты авторов: ")
    for item, amount in dct.items():
        print("{}.{}: {}".format(i, item, amount))
        i+=1
from bs4 import BeautifulSoup
import requests

diction = {}
i = 1
is_have_next = True
while is_have_next:
    url_site = f'https://quotes.toscrape.com/page/{i}/'
    response = requests.get(url_site)
    soup = BeautifulSoup(response.content, 'html.parser')
    
    spans = soup.find_all('span', class_='text')
    for span in spans:
        quote = span.text
        author = span.find_next('small', class_='author').text
        diction[author] = quote

    if not soup.find('li', class_='next'):
        is_have_next = False
    i += 1    
      
print_inventory(diction)




--------------------------------

quantity of pages

from bs4 import BeautifulSoup
import requests
url = 'https://scrapingclub.com/exercise/list_basic/'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')
items = soup.find_all('li', class_='page-item')
print(len(items[1:]))


OR


from bs4 import BeautifulSoup
import requests
def get_pages():
    url = 'https://scrapingclub.com/exercise/list_basic/'
    params = {'page': 1}
    while True:
        response = requests.get(url, params=params) # https://scrapingclub.com/exercise/list_basic/?page=1
        soup = BeautifulSoup(response.text, 'html.parser')
        last_button = soup.find_all('a', class_='page-link')[-1].text
        print(params)
        if last_button == 'Next':
            params['page'] += 1
        else:
            break


print(get_pages())


--------------------------------


from bs4 import BeautifulSoup
import requests
url = 'https://scrapingclub.com/exercise/list_basic/'
response = requests.get(url)
soup = BeautifulSoup(response.text, 'html.parser')
items = soup.find_all('div', class_='col-lg-4 col-md-6 mb-4')
i=1
for item in items:
    name = item.find('h4', class_='card-title').text.strip('\n')
    price = item.find('h5').text
    print(f"{i}: {price} за {name}")
    i+=1
